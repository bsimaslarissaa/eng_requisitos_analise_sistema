# Abaixo segue o código C que será migrado para python.


#include <stdio.h>
#include <string.h>

#define MAX 100

typedef struct {
    char nome[50];
    char cargo[30];
    float salario;
} Funcionario;

Funcionario funcionarios[MAX];
int total = 0;

void adicionarFuncionario();
void listarFuncionarios();
void buscarFuncionario();

int main() {
    int opcao;

    do {
        printf("\n=== SISTEMA DE FUNCIONÁRIOS ===\n");
        printf("1 - Adicionar funcionário\n");
        printf("2 - Listar funcionários\n");
        printf("3 - Buscar funcionário\n");
        printf("0 - Sair\n");
        printf("Escolha uma opção: ");
        scanf("%d", &opcao);
        getchar(); // limpar buffer

        switch (opcao) {
            case 1: adicionarFuncionario(); break;
            case 2: listarFuncionarios(); break;
            case 3: buscarFuncionario(); break;
            case 0: printf("Encerrando...\n"); break;
            default: printf("Opção inválida!\n");
        }
    } while (opcao != 0);

    return 0;
}

void adicionarFuncionario() {
    if (total >= MAX) {
        printf("Limite atingido!\n");
        return;
    }
    printf("Nome: ");
    fgets(funcionarios[total].nome, 50, stdin);
    funcionarios[total].nome[strcspn(funcionarios[total].nome, "\n")] = '\0';

    printf("Cargo: ");
    fgets(funcionarios[total].cargo, 30, stdin);
    funcionarios[total].cargo[strcspn(funcionarios[total].cargo, "\n")] = '\0';

    printf("Salário: ");
    scanf("%f", &funcionarios[total].salario);
    getchar();

    total++;
    printf("Funcionário cadastrado!\n");
}

void listarFuncionarios() {
    if (total == 0) {
        printf("Nenhum funcionário cadastrado.\n");
        return;
    }
    printf("\nLista de funcionários:\n");
    for (int i = 0; i < total; i++) {
        printf("%d) %s - %s - R$ %.2f\n", i + 1,
               funcionarios[i].nome,
               funcionarios[i].cargo,
               funcionarios[i].salario);
    }
}

void buscarFuncionario() {
    char nomeBusca[50];
    printf("Nome do funcionário: ");
    fgets(nomeBusca, 50, stdin);
    nomeBusca[strcspn(nomeBusca, "\n")] = '\0';

    for (int i = 0; i < total; i++) {
        if (strcmp(funcionarios[i].nome, nomeBusca) == 0) {
            printf("Cargo: %s | Salário: R$ %.2f\n",
                   funcionarios[i].cargo, funcionarios[i].salario);
            return;
        }
    }
    printf("Funcionário não encontrado.\n");
}




## Segue o mesmo código em python 



funcionarios = []  
MAX = 100


def adicionar_funcionario():
    if len(funcionarios) >= MAX:
        print("Limite atingido!")
        return

    nome = input("Nome: ").strip()
    cargo = input("Cargo: ").strip()

    try:
        salario = float(input("Salário: "))
    except ValueError:
        print("Valor inválido para salário!")
        return

    funcionario = {
        "nome": nome,
        "cargo": cargo,
        "salario": salario
    }

    funcionarios.append(funcionario)
    print("Funcionário cadastrado!")


def listar_funcionarios():
    if not funcionarios:
        print("Nenhum funcionário cadastrado.")
        return

    print("\nLista de funcionários:")
    for i, f in enumerate(funcionarios, start=1):
        print(f"{i}) {f['nome']} - {f['cargo']} - R$ {f['salario']:.2f}")


def buscar_funcionario():
    nome_busca = input("Nome do funcionário: ").strip()

    for f in funcionarios:
        if f["nome"].lower() == nome_busca.lower():
            print(f"Cargo: {f['cargo']} | Salário: R$ {f['salario']:.2f}")
            return

    print("Funcionário não encontrado.")


def menu():
    while True:
        print("\n=== SISTEMA DE FUNCIONÁRIOS ===")
        print("1 - Adicionar funcionário")
        print("2 - Listar funcionários")
        print("3 - Buscar funcionário")
        print("0 - Sair")

        opcao = input("Escolha uma opção: ")

        if opcao == "1":
            adicionar_funcionario()
        elif opcao == "2":
            listar_funcionarios()
        elif opcao == "3":
            buscar_funcionario()
        elif opcao == "0":
            print("Encerrando...")
            break
        else:
            print("Opção inválida!")


menu()
